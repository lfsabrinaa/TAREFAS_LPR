*Exercício 1 C++
Construa uma função em C++ que retorne
o reverso de um número inteiro.

*Exercício 2 C++
Construa um algoritmo em C++ que agrupe
em funções os exercícios 1, 3 e 4 da tarefa
de estruturas de repetições. Cada exercício
deve estar contido em uma função
separada. Defina os parâmetros de modo
eficiente e generalista. Construa um menu
na função main. Reuse os códigos das suas
respostas da tarefa no GitHub ou a
resposta do professor postada no AVA.

*Exercício 3 C#
Desenvolva um programa em C# que
simule um sistema de seleção de heróis da
Marvel para uma equipe. O programa deve
ter as seguintes funcionalidades:
a) Cadastro de Heróis:
Crie uma função chamada cadastrarHeroi que permita ao usuário
inserir o nome, poder e pontuação de um herói da Marvel. A função deve
solicitar essas informações ao usuário e armazená-las em variáveis. Não é
necessário armazenar os heróis em uma lista ou vetor. O programa deve
permitir o cadastro de até 5 heróis.
b) Seleção de Equipe:
Crie uma função chamada selecionarEquipe que permita ao usuário
selecionar heróis para formar sua equipe. A função deve exibir os heróis
cadastrados e permitir que o usuário selecione quais heróis deseja incluir
em sua equipe. O usuário deve ser capaz de selecionar três heróis para
sua equipe.
c) Pontuação Total da Equipe:
Crie uma função chamada calcularPontuacaoTotal que calcule a
pontuação total da equipe com base nos heróis selecionados. A
pontuação total da equipe deve ser a soma das pontuações individuais de
cada herói selecionado.
d) Exibição da Equipe:
Crie uma função chamada exibirEquipe que exiba os heróis
selecionados para a equipe, seu poder e a pontuação total da equipe.
e) Menu:
Crie uma função chamada menuPrincipal que exiba um menu com as
opções disponíveis para o usuário (cadastro de heróis, seleção de equipe,
exibição da equipe e sair do programa). O usuário deve poder escolher
uma das opções do menu e o programa deve executar a funcionalidade
correspondente.
Requisitos Adicionais:
● O programa deve continuar em execução até que o usuário escolha
a opção de sair.
● Utilize variáveis locais para armazenar as informações dos heróis e
da equipe.
● Não utilize classes, vetores ou listas! 
